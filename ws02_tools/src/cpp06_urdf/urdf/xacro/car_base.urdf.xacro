<!-- 底盘实现 -->
<robot xmlns:xacro="http://www.ros.org/wiki/xacro">
    <!-- 1.声明变量 -->
    <!-- PI值 -->
    <xacro:property name="PI" value="3.1415927"/>
    <!-- 底盘尺寸 -->
    <xacro:property name="car_length" value="0.2"/>
    <xacro:property name="car_width" value="0.12"/>
    <xacro:property name="car_height" value="0.07"/>
    <!-- 轮胎尺寸 -->
    <xacro:property name="wheel_radius" value="0.025"/>
    <xacro:property name="wheel_length" value="0.02"/>
    <!-- 轮胎关节平移量 -->
    <xacro:property name="wheel_joint_x" value="0.08"/>
    <xacro:property name="wheel_joint_y" value="${car_width / 2}"/>
    <xacro:property name="wheel_joint_z" value="${-(car_height/2 + distance - wheel_radius)}"/>

    <!-- 离地间距 -->
    <xacro:property name="distance" value="0.015"/>
    <material name="yellow">
        <color rgba="0.9 0.6 0.0 0.5"/>
    </material>
    <material name="black">
        <color rgba="0.0 0.0 0.0 0.5"/>
    </material>

    <!-- 2.设置base_footprint -->
    <link name="base_footprint">
        <visual>
            <geometry>
                <sphere radius="0.001"/>
            </geometry>
        </visual>
    </link>

    <!-- 3.设置base_link -->
    <link name="base_link">
        <visual>
            <geometry>
                <box size="${car_length} ${car_width} ${car_height}"/>
            </geometry>
            <material name="yellow"/>
        </visual>
    </link>

    <!-- 4.设置joint将二者关联 -->
    <joint name="base_link2base_footprint" type="fixed">
        <parent link="base_footprint"/>
        <child link="base_link"/>
        <origin xyz="0.0 0.0 ${car_height/2 + distance}"/>
    </joint>

    <!-- 5.定义车轮相关的宏 -->
    <!-- 宏函数创建规则: 封装可被复用的代码，变的数据以参数方式暴露出去 -->
    <!-- link变量: name -->
    <!-- joint变量: name child_link origin(x,y) -->
    <xacro:macro name="wheel_func" params="link_name front_flag left_flag">
        <link name="${link_name}">
            <visual>
                <geometry>
                    <cylinder radius="${wheel_radius}" length="${wheel_length}"/>
                </geometry>
                <material name="black"/>
                <!-- 通过roll使车轮立起 -->
                <origin rpy="${PI / 2} 0.0 0.0"/>
            </visual>
        </link>
        <joint name="${link_name}2base_link" type="continuous">
            <parent link="base_link"/>
            <child link="${link_name}"/>
            <!-- 车轮平移 -->
            <origin xyz="${wheel_joint_x * front_flag} ${wheel_joint_y * left_flag} ${wheel_joint_z}"/>
            <!-- 车轮旋转 -->
            <axis xyz="0 1 0"/>
        </joint>
    </xacro:macro>
    <!-- 6.调用宏生成多个车轮 -->
    <xacro:wheel_func link_name="front_left" front_flag="1" left_flag="1"/>
    <xacro:wheel_func link_name="front_right" front_flag="1" left_flag="-1"/>
    <xacro:wheel_func link_name="back_left" front_flag="-1" left_flag="1"/>
    <xacro:wheel_func link_name="back_right" front_flag="-1" left_flag="-1"/>
</robot>
